set shell=/usr/bin/bash
set encoding=utf-8      " The encoding displayed on screen
set fileencoding=utf-8  " The encoding written to file.

" this is vim-plug
call plug#begin('~/.vim/plugged')
        Plug 'lifepillar/vim-colortemplate'
call plug#end()

" turn off .viminfo file
set viminfofile=NONE

" hide toolbard in colortemplate files
let g:colortemplate_toolbar = 0

" languages
" default second language is russian
set keymap=russian-jcukenmac
"set keymap=hebrew
"set keymap=arabic_utf-8

" input method
set iminsert=0
set imsearch=0

" displays which keymaps are available
"echo globpath(&rtp, "keymap/*.vim")

" keyboard
set listchars=space:*,extends:>,precedes:<,tab:\|>,eol:$
set backspace=indent,eol,start

" set mapleader
let mapleader = ","

" get list of available colorschemes w/ following command
" echo globpath(&rtp, 'colors/*.vim')

" use this cmd to show color group name under the cursor
" execute 'hi' synIDattr(synID(line("."), col("."), 1), "name")

" recognise whitespace in thj
" syntax match ExtraWhitespace /\s\+$/
set background=light
colorscheme rstmono

" syntax on
"https://vimdoc.sourceforge.net/htmldoc/starting.html#startup
autocmd VimEnter * syntax match ExtraWhitespace /\s\+$/ 

" same functionality as hitting <ctrl-d> in the command mode
set wildmenu

" concealing
set conceallevel=0

" changes default dir to currentfile dir
set autochdir

" show matching brackets
set noshowmatch                         " disables short snapback
let g:loaded_matchparen = 0             " disables highlighting itself

set wrap                                " wrap text that goes beyond screen
set colorcolumn=80                      " colors column

" disabled autofolding
set nofoldenable

" hide line numbers
set nonumber

" stop system vim sounds
set noerrorbells

" no scrollbars in macvim
"set guioptions=

" search-centricity
set ttyfast
set hlsearch      " highlight search
set ignorecase    " ignorecase
set incsearch     " highlight while typing
set scrolloff=5   " 5 lines before/after cursor preserved

" remove search highlight (not needed in Vim9)
"nnoremap <C-L> :nohl<CR><C-L>

" show commands written
"set showcmd

" use systems clipboard (macvim)
"set clipboard=unnamed

" ?????????????? set fo+=
" set formatoptions+=t

" working w/ tab
set tabstop=8       " show existing tab with 'n' spaces width (ts)
set shiftwidth=8    " when indenting with `>`, use 'n' spaces width
set softtabstop=8   " # of spaces inserted on each press of \t
set expandtab       " converts \t into <tabstop> amount of spaces

" no backup files
set nobackup
set noswapfile
set nowritebackup

" turn on the detection of ft, plugins and indents
filetype on             " enable filetype detection
filetype plugin on      " load file-specific plugins
filetype indent on      " load file-specific indentation

" --------------------------------
" Plugin Customization Begins Here
" --------------------------------

" --------------------------------
" remapping starts here
" --------------------------------

" map: normal, visual, select and operator pendingm modes
" map!: insert, command-line
" :help key-notation

" texsnip
noremap <leader>tex :.!texsnip<CR>

" 'Y' as 'D'
map <S-Y> y$

" reload vimrc
nnoremap <C-W>r :so $MYVIMRC<CR>

" inserting one line below/above the current
"nnoremap <S-k> O<Esc>
nnoremap <CR> o<Esc>

" pathname completion
inoremap <leader><C-I> <C-X><C-F>

" switching input method
nnoremap <leader>en :set iminsert=0<CR>:set imsearch=0<CR>
nnoremap <leader>ru :set keymap=russian-jcuken-pc<CR>
nnoremap <leader>ar :set keymap=arabic-pc_utf-8<CR>
nnoremap <leader>he :set keymap=hebrew<CR>

" change language while in input mode, equiv. to `ctrl-^`
lnoremap <C-l> <C-^>
inoremap <C-l> <C-^>

" rtl / ltr input mode for arabic/hebrew
nnoremap <leader>hh :set norl<CR>
inoremap <leader>hh :set norl<CR>a
nnoremap <leader>ll :set rl<CR>
inoremap <leader>ll :set rl<CR>a

" toggle background
map <Leader>bg :let &background = (&background == "dark"? "light" : "dark")<CR>

" --------------------------------
" remapping ends here
" --------------------------------

" ----------------------
" statusline begins here
" ----------------------

set ruler
set ruf=%30(%=%#Normal#%.50F\ [%{strlen(&ft)?&ft:'none'}]\ %l:%c\ %p%%%)

" ----------------------
" statusline ends here
" ----------------------
